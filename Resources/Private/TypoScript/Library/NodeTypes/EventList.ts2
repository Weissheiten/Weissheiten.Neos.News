// Demo TS2 Implementation including a template to show sorting and paging
prototype(Weissheiten.News:EventList) < prototype(TYPO3.Neos:Content){
    newsRequest = ${request.arguments.tag}
    newsCollection =  ${q(site).find('[instanceof Weissheiten.News:News]').get()}

    templatePath = 'resource://Weissheiten.News/Private/Templates/NodeTypes/EventList.html'
    sectionName = 'eventList'

    # set the item renderer for each entry in the list
    itemRenderer = Weissheiten.News:EventShort

    startingPoint = ${q(node).property('entryPoint')}

    #Set to uncached to ensure that pagination works
    @cache {
        mode = 'uncached'
        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
        }
    }

    /*

    # filterByTag - this considers the GET parameter (e.g.: &tag=mysearchtag) - if there is no argument - all news are shown
    @override.filterByTag = ${request.arguments.tag}
    newsCollection.@process.filterByTag = ${filterByTag != null ? q(value).filter('[tags *= ' + filterByTag + ']').get() : value}

    # sort by the property defined in Configuration/Settings.yaml
    newsCollection.@process.sort = ${q(value).count() > 0 ? q(value).sort(configuration.sortProperty, 'DESC').get() : value}

    # limit the results found according to the configuration in Configuration/Settings.yaml
    newsCollection.@process.slice = ${q(value).count() > 0 ? q(value).slice(0, String.toInteger(configuration.maxNumberOfItems)).get() : value}

    # limit the results found according to the configuration in Configuration/Settings.yaml
    newsCollection.@process.tile = ${String.toInteger(configuration.tilingCols) > 0 ? q(value).tile(String.toInteger(configuration.tilingCols)).get() : value}


    */

}